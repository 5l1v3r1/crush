Regex library:

# Replace file column in-place using regex
ls | select * file={regex.replace $file (regex.new "a(b*)c") "A\\1B"}

Modes:

regex{.*} # Regex
(regex.new ".*")
*{*.txt}  # Glob
{ls}      # Closure
(ls)      # Command substitution


Aggregating streams:

find . | group %size | aggr group={count}
find . | group %user | aggr group={sum %size}

Graph/Tree data:

Is there a nice way to represent and visualize graph data such as trees that makes sense for crush?
Could be useful for showing a tree view of processes (ps), file trees (find, du), etc.

* Should this be represented by a special type of tree-struct or just use regular structs with members of the same type? The latter can't represent cycles.
* What additional primitives are needed to efficiently manipulate tree data?
