syntax = "proto3";
package lang.serialization.model;

message SerializedValue {
    uint64 root = 1;
    repeated Element elements = 2;
}

message Element {
    oneof element {
        string string = 2;
        int64 small_integer = 3;
        string large_integer = 4;
        Struct struct = 5;
        bytes file = 6;
        double float = 7;
        Dict dict = 8;
        Closure closure = 9;
        bytes binary = 10;
        Duration duration = 11;
        Strings field = 12;
        string glob = 13;
        string regex = 14;
        Scope scope = 15;
        bool bool = 16;
        bool empty = 17;
        Type type = 18;
        int64 time = 19;
        Table table = 20;
        List list = 21;
        ColumnType column_type = 22;
        Row row = 23;
        Member member = 24;
        Strings command = 26;
        BoundCommand bound_command = 27;
    }
}

message Duration {
    int64 secs = 1;
    int32 nanos = 2;
}

message BoundCommand {
    uint64 this = 1;
    uint64 command = 2;
}

message Closure {
    oneof name {
        bool has_name = 1;
        uint64 name_value = 2;
    }
    repeated Job job_definitions = 3;
    oneof signature {
        bool has_signature = 4;
        Signature signature_value = 5;
    }
    Scope env = 6;
    string short_help = 7;
    oneof long_help {
        bool has_long_help = 8;
        string long_help_value = 9;
    }
}

message Signature {
    repeated Parameter paremeter = 1;
}

message Parameter {
    oneof paremeter{
        NormalParameter normal = 1;
        string named = 2;
        string unnamed = 3;
    }
}

message NormalParameter {
    string name = 1;
    ValueDefinition type = 2;
    oneof default {
        bool has_default = 3;
        ValueDefinition default_value = 4;
    }
}

message ValueDefinition {
    oneof value_definition {
        Element value = 1;
        // Fixme Closure definition
        Job job = 3;
        string label = 4;
        //...
    }
}

message Job {
    repeated CommandInvocation commands = 1;
}

message CommandInvocation {
    ValueDefinition command = 1;
    repeated ArgumentDefinition arguments = 2;
}

message ArgumentDefinition {
    //...
}

message Strings {
    repeated string elements = 1;
}

message Table {
    repeated uint64 column_types = 1;
    repeated uint64 rows = 2;
}

message Row {
    repeated uint64 cells = 1;
}

message Scope {
    repeated uint64 members = 2;
}

message Type {
    enum SimpleTypeKind {
        STRING = 0;
        INTEGER = 1;
        FILE = 2;
        FLOAT = 3;
        COMMAND = 4;
        BINARY = 5;
        DURATION = 6;
        FIELD = 7;
        GLOB = 8;
        REGEX = 9;
        SCOPE = 10;
        BOOL = 11;
        EMPTY = 12;
        TYPE = 13;
        TIME = 14;
        STRUCT = 15;
        ANY = 16;
        BINARY_STREAM = 17;
    }
    oneof type {
        SimpleTypeKind simple_type = 1;
        ListType list_type = 2;
        DictType dict_type = 3;
        TableType table_type = 4;
        TableType table_stream_type = 5;
    }
}

message TableType {
    repeated uint64 column_types = 1;
}

message ColumnType {
    string name = 1;
    uint64 type = 2;
}

message ListType {
    uint64 element_type = 1;
}

message DictType {
    uint64 key_type = 1;
    uint64 value_type = 2;
}

message List {
    uint64 element_type = 1;
    repeated uint64 elements = 2;
}

message Dict {
    uint64 key_type = 1;
    uint64 value_type = 2;
    repeated uint64 elements = 3;
}

message Struct {
    oneof parent {
        bool has_parent = 1;
        uint64 parent_value = 2;
    }
    repeated uint64 members = 3;
}

message Member {
    uint64 name = 1;
    uint64 value = 2;
}

