Todo for MVP 1:
Stop the namespace deadlocks
Remove the dot operator in favor of []
Add var.use command
Add control.source command
Add control.cmd command
Add text.format command
Add text.substr command
Add text.split command
Add readline command that reads one line of interactive text input from the user via the terminal
Add system tests for type casting
Add system tests for for loop
Add system tests for binary stream handling
Add system tests for structs
Add system tests for dealing with tables as streams
Rethink aggr and figure out how to make custom reduce commands
Some missing comparisons on Cell
Missing some cell type serialisations and deserialisations
Error source propagation
help command
Add Kind to CrushError
Deal with different error kinds differently
Add command-field to CrushError
Add source field to CrushError
Make error printing display source of error

Future features:
make file globing testable via fakes
implement file regexps
make ls support regexps
Add package command to create a new namespace
Make names mandatory and unique for struct fields
Add support for %<INTEGER> for offset based field identifiers
Make it possible to use the pipe operator with the for command
pbuf.parse command that takes a protobuf definition and uses it to deserialize protobuf data
avro.parse command that deserializes avro data
toml.parse command that deserializes toml data
Add history command with all previous interactive invocations, including invocation string, current status, and misc metadata.
Add proc.jobs command


Done:
Fix all expects calls that aren't impossible, and propagate the errors
Display errors
Propagate runtime errors
one command per file
make filter actually useful
implement globs
make filter support globs
proper lexer and parser
implement file globs
make ls support globs
implement sort command
basic keyboard handling
implement find command
implement variables
implement set command
implement cell type File
make ls/find output File cells instead of strings
make nice presentation of File cells
implement Stream<Row> cell type
implement command substitution
implement group command
one command per thread
implement count command
implement head command
implement tail command
Implement matching operators, =~ and !~
make filter support globs
implement select command
implement enumerate command
implement single row cell type
implement regexps
make filter support regexps
implement csv command
implement cast command for cell type conversion
Implement ps command
implement unset command
Rename filter to where
implement reverse command
List cell types
List literals
List subscripting
Implement for command for {ls} `{echo $file}
Switch over to new list syntax
implement sum command
Start putting commands into namespaces
fields and variables should support dot notation
add support for using namespace objects as actual namespaces
Implement list.push
Implement list.pop
Implement boolean cell type
Implement boolean literals. Perhaps use ?{true} and ?{false}... Pretty ugly.
Implement namespace cell type
Implement dict cell type
implement env command
Missing type check on list literals, e.g. let foo=[1 horse]
Add map/rows/output subscripting
Add checks so we don't try to hash on unhashable types in either dict or join
Add type checks in where command
add and/or to where command
take-command for reading N (defaults to 1) lines from an output in a variable variable
Implement zip command to combine two streams
Implement if command if {stat foo.txt is_file} {} else {}
Any cell can be the output of a command
Rename cell -> value
Rename output -> stream
Rename row -> struct
Think through input/output types of join
Add uniq command
Implement http command
Binary blob type
The bin command interprets files as a single binary blob.
Head takes on the role of take command
type.of command that outputs type of input
Create new type Type
Add a command for picking a single field off a struct, e.g. struct foo=bar | field %foo
Redo the select command to use closures
Rename JobError -> CrushError
Add default use clauses
Move for/if to control namespace
Move cat/lines/json/csv to io namespace
Move struct/val/materializ/list/dict to data namespace
Materialized binary
Add proc.kill command
Rethink join syntax
Add math.neg command
The for command should not be limited to streams, and it should be possible to name the entire row, e.g. for i=(ls) {val $i},
Support for iterating over dicts with the for command
Add control.break/control.continue commands
Flesh out time/duration modes with add/subtract support
Add text.upper command
Add text.lower command
